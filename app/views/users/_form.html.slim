= simple_form_for @user do |f|
  = f.error_notification
  .form-inputs
    fieldset
      legend = t('legends.account_data')
      
      - if @user.status == :waiting_for_email
        = f.input :email, label: t('simple_form.labels.user.not_verified_email'), label_html: { class: "error" }
      - else
        = f.input :email
      -if @user.new_record?
        = f.input :password
      = f.input :approved
      .row
        .columns.small-6
          = f.input :member_since,
                    as: :string,
                    input_html: { type: :date,
                                  placeholder: 'dd/mm/yyyy',
                                  value: @user.member_since ? @user.member_since.to_date : nil }
        .columns.small-6
          = f.input :member_until,
                    as: :string,
                    input_html: { type: :date,
                                  placeholder: 'dd/mm/yyyy',
                                  value: @user.member_until ? @user.member_until.to_date : nil }
      = f.hidden_field :approver_id, value: current_user.id unless @user.approved?
    fieldset
      legend = t('legends.personal_data')
      .row
        .columns.small-6
          = f.input :name
        .columns.small-6
          = f.input :last_name
      .row
        .columns.small-4
          = f.input :birthdate, as: :string, input_html: {type: :date, placeholder: 'dd/mm/yyyy'}
        .columns.small-6
          .row
            .columns.small-8
              = f.input :birthplace
            .columns.small-4
              = f.input :birthplace_district, collection: @districts
        .columns.small-2
          = f.input :gender, as: :radio_buttons, collection: ['M', 'F']
      = f.input :tax_code
    fieldset
      legend = t('legends.residency')
      = f.input :address
      .row
        .columns.small-8
          .row
            .columns.small-8
              = f.input :city
            .columns.small-4
              = f.input :zip_code
        .columns.small-4
          = f.input :city_district, collection: @districts
    fieldset
      legend = t('legends.member_informations')
      = f.input :member_type, as: :radio_buttons, boolean_style: :inline,
                collection: User.member_types.map { |k, v| [t("member_type.#{k}"), k] }
      .roles-panel[data-roles-panel]
        - Group.includes(:roles).order(:position).each do |group|
          = f.input :role_ids, as: :check_boxes, collection: group.roles, label: group.name
    fieldset
      legend = t('legends.documentation')
      .row
        .columns.small-6
          = f.input :payment_recipe
        - if @user.payment_recipe.exists?
          .columns.small-6
            = link_to t('download_payment_recipe'), download_payment_recipe_user_path(@user), target: :_blank
      .row
        .columns.small-6
          = f.input :document
        - if @user.document.exists?
          .columns.small-6
            = link_to t('download_document'), download_document_user_path(@user), target: :_blank
  .form-actions
    = f.submit class: 'button primary'
